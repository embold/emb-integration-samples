name: Build and Test

on:
  push:
    branches:
      - github_action_cpp
  pull_request:
    branches:
      - github_action_cpp

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-20.04
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-9
          pip install gcovr==8.2

      - name: Configure CMake
        run: |
          cd sample_source_code/CPP/googletest
          g++ --version
          gcov --version
          gcovr --version
          cmake . -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \
                -DCMAKE_BUILD_TYPE=Debug \
                -Dgtest_build_samples=ON \
                -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Build with Make
        run: |
          cd sample_source_code/CPP/googletest
          make

      - name: Run GoogleTest and Generate XML Report
        run: |
          cd sample_source_code/CPP/googletest
          # Loop through all `sample*_unittest` files and run them
          for test in ./googletest/sample*_unittest; do
              test_name=$(basename "$test")  # Extracts the file name
              output_file="./output/gtest/${test_name}.xml"
              echo "Running $test and saving output to $output_file"
              "$test" --gtest_output=xml:"$output_file"
          done

      - name: Generate Code Coverage Report (gcovr)
        run: |
          cd sample_source_code/CPP/googletest
          rm -rf ./output/gcov
          mkdir -p ./output/gcov
          gcovr -r . --xml -o ./output/gcov/gcov_report.xml

      - name: Download and Unpack BrowserStack CQ Scanner
        run: |
          curl https://v1.embold.io/nfs/CLI/browserstack-codequality-scanner.tar.gz -o browserstack-codequality-scanner-archive.tar.gz
          tar xvf browserstack-codequality-scanner-archive.tar.gz
        
      - name: Run Static Code Analysis
        continue-on-error: true
        env:
          EMBOLD_TOKEN: ${{ secrets.EMBOLD_TOKEN_IDE_INST }}
        run: |
          ./browserstack-codequality-scanner/bin/embold-scanner analyse \
          -u https://packages.embold.io/ \
          -t $EMBOLD_TOKEN \
          -r 7205368b7f51aa0dde425b5a9065166f \
          -c sample_source_code/CPP/googletest/repository-configuration.json \
          -d ./temp \
          -b ./sample_source_code/CPP/googletest \
          -v
